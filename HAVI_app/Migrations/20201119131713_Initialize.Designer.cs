// <auto-generated />
using System;
using HAVI_app.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HAVI_app.Migrations
{
    [DbContext(typeof(HAVIdatabaseContext))]
    [Migration("20201119131713_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HAVI_app.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("ArticleInformationCompleted")
                        .HasColumnType("int");

                    b.Property<int>("ArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleInformationID");

                    b.Property<int>("ArticleState")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("ErrorOwner")
                        .HasColumnType("text");

                    b.Property<int>("ErrorReported")
                        .HasColumnType("int");

                    b.Property<int>("InternalArticalInformationCompleted")
                        .HasColumnType("int");

                    b.Property<int>("InternalArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("InternalArticleInformationID");

                    b.Property<int>("PurchaserId")
                        .HasColumnType("int")
                        .HasColumnName("PurchaserID");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<string>("VailedForCustomer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArticleInformationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("InternalArticleInformationId");

                    b.HasIndex("PurchaserId");

                    b.HasIndex("SupplierId");

                    b.HasIndex(new[] { "Id" }, "UQ__Article__3214EC26473E7B8A")
                        .IsUnique();

                    b.ToTable("Article");
                });

            modelBuilder.Entity("HAVI_app.Models.ArticleBundle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Bundle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ArticleBundle");
                });

            modelBuilder.Entity("HAVI_app.Models.ArticleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("ArticleName")
                        .HasColumnType("text");

                    b.Property<int?>("ArticlesPerSalesunit")
                        .HasColumnType("int");

                    b.Property<int?>("CartonsPerLayer")
                        .HasColumnType("int");

                    b.Property<int?>("CartonsPerPallet")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("ClassificationCode")
                        .HasColumnType("text");

                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text");

                    b.Property<int?>("DangerousGoods")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FreightResponsibility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("GrossWeightPerSalesunit")
                        .HasColumnType("float");

                    b.Property<int?>("Gtinnumber")
                        .HasColumnType("int")
                        .HasColumnName("GTINNumber");

                    b.Property<double?>("HeightPerSalesunit")
                        .HasColumnType("float");

                    b.Property<string>("ImportedFrom")
                        .HasColumnType("text");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<double?>("LengthPerSalesunit")
                        .HasColumnType("float");

                    b.Property<int?>("MinimumOrderQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumShelflife")
                        .HasColumnType("int");

                    b.Property<double?>("NetWeightPerSalesunit")
                        .HasColumnType("float");

                    b.Property<int?>("OrganicArticle")
                        .HasColumnType("int");

                    b.Property<int?>("OtherCosts")
                        .HasColumnType("int");

                    b.Property<int>("PalletExchange")
                        .HasColumnType("int");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<string>("Salesunit")
                        .HasColumnType("text");

                    b.Property<string>("SetCurrency")
                        .HasColumnType("text");

                    b.Property<int?>("Shelflife")
                        .HasColumnType("int");

                    b.Property<string>("SpecialInformation")
                        .HasColumnType("text");

                    b.Property<string>("SupplierArticleName")
                        .HasColumnType("text");

                    b.Property<double?>("TemperatureStorageMax")
                        .HasColumnType("float");

                    b.Property<double?>("TemperatureStorageMin")
                        .HasColumnType("float");

                    b.Property<double?>("TemperatureTransportationMax")
                        .HasColumnType("float");

                    b.Property<double?>("TemperatureTransportationMin")
                        .HasColumnType("float");

                    b.Property<string>("TollTarifNumber")
                        .HasColumnType("text");

                    b.Property<int?>("TransitTime")
                        .HasColumnType("int");

                    b.Property<int?>("TransportBooking")
                        .HasColumnType("int");

                    b.Property<double?>("WidthPerSalesunit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.Bundle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("ArticleBundle")
                        .HasColumnType("text");

                    b.Property<int?>("ArticleBundleQuantity")
                        .HasColumnType("int");

                    b.Property<int>("InternalArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("InternalArticleInformationID");

                    b.HasKey("Id");

                    b.HasIndex("InternalArticleInformationId");

                    b.ToTable("Bundle");
                });

            modelBuilder.Entity("HAVI_app.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.DepartmentId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DepartmentId");
                });

            modelBuilder.Entity("HAVI_app.Models.FreightResponsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Responsibility")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FreightResponsibility");
                });

            modelBuilder.Entity("HAVI_app.Models.Iloscategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("ILOSCategory");
                });

            modelBuilder.Entity("HAVI_app.Models.Ilosorderpickgroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("Orderpickgroup")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("ILOSOrderpickgroup");
                });

            modelBuilder.Entity("HAVI_app.Models.IlossortGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("SortGroup")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ILOSSortGroup");
                });

            modelBuilder.Entity("HAVI_app.Models.InformCostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CostType")
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("InformCostType");
                });

            modelBuilder.Entity("HAVI_app.Models.InternalArticleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int?>("Bosnumber")
                        .HasColumnType("int")
                        .HasColumnName("BOSNumber");

                    b.Property<int?>("Carlanumber")
                        .HasColumnType("int")
                        .HasColumnName("CARLANumber");

                    b.Property<string>("ClassificationCode")
                        .HasColumnType("text");

                    b.Property<int?>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<double?>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("text")
                        .HasColumnName("DepartmentID");

                    b.Property<int?>("Eannumber")
                        .HasColumnType("int")
                        .HasColumnName("EANNumber");

                    b.Property<int?>("Grinnumber")
                        .HasColumnType("int")
                        .HasColumnName("GRINNumber");

                    b.Property<int?>("Gtinnumber")
                        .HasColumnType("int")
                        .HasColumnName("GTINNumber");

                    b.Property<string>("Iloscategory")
                        .HasColumnType("text")
                        .HasColumnName("ILOSCategory");

                    b.Property<string>("IlosorderPickGroup")
                        .HasColumnType("text")
                        .HasColumnName("ILOSOrderPickGroup");

                    b.Property<string>("IlossortGroup")
                        .HasColumnType("text")
                        .HasColumnName("ILOSSortGroup");

                    b.Property<string>("InnerPackingIlos")
                        .HasColumnType("text")
                        .HasColumnName("InnerPackingILOS");

                    b.Property<int?>("InsertBosSap")
                        .HasColumnType("int")
                        .HasColumnName("Insert_BOS_SAP");

                    b.Property<int?>("InsertEanSap")
                        .HasColumnType("int")
                        .HasColumnName("Insert_EAN_SAP");

                    b.Property<int?>("InsertGrinSap")
                        .HasColumnType("int")
                        .HasColumnName("Insert_GRIN_SAP");

                    b.Property<int?>("Lrinnumber")
                        .HasColumnType("int")
                        .HasColumnName("LRINNumber");

                    b.Property<string>("NewIlosarticleNumber")
                        .HasColumnType("text")
                        .HasColumnName("NewILOSArticleNumber");

                    b.Property<string>("PackagingGroup")
                        .HasColumnType("text");

                    b.Property<double?>("PriceInCountryCurrency")
                        .HasColumnType("float");

                    b.Property<int?>("PrimaryDcIloscode")
                        .HasColumnType("int")
                        .HasColumnName("PrimaryDC_ILOSCode");

                    b.Property<string>("ReferenceIlosnumber")
                        .HasColumnType("text")
                        .HasColumnName("ReferenceILOSNumber");

                    b.Property<int?>("ReferenceSapmaterial")
                        .HasColumnType("int")
                        .HasColumnName("ReferenceSAPMaterial");

                    b.Property<int?>("RegisterShelfLife")
                        .HasColumnType("int");

                    b.Property<int?>("RemainShelfStore")
                        .HasColumnType("int");

                    b.Property<int?>("Sprnnumber")
                        .HasColumnType("int")
                        .HasColumnName("SPRNNumber");

                    b.Property<string>("SupplierDeliveryUnit")
                        .HasColumnType("text");

                    b.Property<int?>("SupplierIdIlos")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID_ILOS");

                    b.Property<int?>("TextPurchaseNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TransitTimeForHavi")
                        .HasColumnType("int")
                        .HasColumnName("TransitTimeForHAVI");

                    b.Property<string>("VatTaxcode")
                        .HasColumnType("text")
                        .HasColumnName("VAT_TAXCode");

                    b.HasKey("Id");

                    b.ToTable("InternalArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("HAVI_app.Models.OtherCostsForArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleInformationID");

                    b.Property<string>("InformCostType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArticleInformationId");

                    b.ToTable("OtherCostsForArticle");
                });

            modelBuilder.Entity("HAVI_app.Models.PackagingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Group")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PackagingGroup");
                });

            modelBuilder.Entity("HAVI_app.Models.PrimaryDciloscode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("PrimaryCode")
                        .HasColumnType("text")
                        .HasColumnName("PrimaryCode");

                    b.Property<string>("Sapplant")
                        .HasColumnType("text")
                        .HasColumnName("SAPPlant");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("PrimaryDCILOSCode");
                });

            modelBuilder.Entity("HAVI_app.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Usertype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("HAVI_app.Models.Purchaser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Purchaser");
                });

            modelBuilder.Entity("HAVI_app.Models.Qip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("InternalArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("InternalArticleInformationID");

                    b.Property<string>("QipanswerOptions")
                        .HasColumnType("text")
                        .HasColumnName("QIPAnswerOptions");

                    b.Property<string>("Qipdescription")
                        .HasColumnType("text")
                        .HasColumnName("QIPDescription");

                    b.Property<string>("Qipfrequency")
                        .HasColumnType("text")
                        .HasColumnName("QIPFrequency");

                    b.Property<string>("QipfrequencyType")
                        .HasColumnType("text")
                        .HasColumnName("QIPFrequencyType");

                    b.Property<string>("QiphighBoundary")
                        .HasColumnType("text")
                        .HasColumnName("QIPHighBoundary");

                    b.Property<string>("QiplowBoundary")
                        .HasColumnType("text")
                        .HasColumnName("QIPLowBoundary");

                    b.Property<string>("QipnameNumber")
                        .HasColumnType("text")
                        .HasColumnName("QIPNameNumber");

                    b.Property<string>("Qipokvalue")
                        .HasColumnType("text")
                        .HasColumnName("QIPOKValue");

                    b.Property<string>("QipsetAnswer")
                        .HasColumnType("text")
                        .HasColumnName("QIPSetAnswer");

                    b.HasKey("Id");

                    b.HasIndex("InternalArticleInformationId");

                    b.ToTable("QIP");
                });

            modelBuilder.Entity("HAVI_app.Models.Qipnumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AnswerOptions")
                        .HasColumnType("text");

                    b.Property<int>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("Frequency");

                    b.Property<int>("FrequencyType")
                        .HasColumnType("int")
                        .HasColumnName("FrequencyType");

                    b.Property<int>("HighBoundary")
                        .HasColumnType("int")
                        .HasColumnName("HighBoundary");

                    b.Property<int>("LowBoundary")
                        .HasColumnType("int")
                        .HasColumnName("LowBoundary");

                    b.Property<int>("OKValue")
                        .HasColumnType("int")
                        .HasColumnName("OKValue");

                    b.Property<string>("Qipdescription")
                        .HasColumnType("text")
                        .HasColumnName("QIPDescription");

                    b.Property<string>("QipnumberName")
                        .HasColumnType("text")
                        .HasColumnName("QIPNumberName");

                    b.Property<int>("SetAnswer")
                        .HasColumnType("int")
                        .HasColumnName("SetAnswer");

                    b.HasKey("Id");

                    b.ToTable("QIPNumber");
                });

            modelBuilder.Entity("HAVI_app.Models.SalesUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SalesUnit");
                });

            modelBuilder.Entity("HAVI_app.Models.Sapplant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("InternalArticleInformationId")
                        .HasColumnType("int")
                        .HasColumnName("InternalArticleInformationID");

                    b.Property<string>("SapplantName")
                        .HasColumnType("text")
                        .HasColumnName("SAPPlantName");

                    b.Property<int?>("SapplantValue")
                        .HasColumnType("int")
                        .HasColumnName("SAPPlantValue");

                    b.HasKey("Id");

                    b.HasIndex("InternalArticleInformationId");

                    b.ToTable("SAPPlant");
                });

            modelBuilder.Entity("HAVI_app.Models.SetCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SetCurrency");
                });

            modelBuilder.Entity("HAVI_app.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FreightResponsibility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PalletExchange")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("HAVI_app.Models.SupplierDeliveryUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("SupplierDeliveryUnit");
                });

            modelBuilder.Entity("HAVI_app.Models.VailedForCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.Property<string>("Customer")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("VailedForCustomer");
                });

            modelBuilder.Entity("HAVI_app.Models.VatTaxCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryID");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("VatTaxCode");
                });

            modelBuilder.Entity("HAVI_app.Models.Article", b =>
                {
                    b.HasOne("HAVI_app.Models.ArticleInformation", "ArticleInformation")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleInformationId")
                        .HasConstraintName("FK__Article__Article__34C8D9D1")
                        .IsRequired();

                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("Articles")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__Article__Country__35BCFE0A")
                        .IsRequired();

                    b.HasOne("HAVI_app.Models.InternalArticleInformation", "InternalArticleInformation")
                        .WithMany("Articles")
                        .HasForeignKey("InternalArticleInformationId")
                        .HasConstraintName("FK__Article__Interna__36B12243")
                        .IsRequired();

                    b.HasOne("HAVI_app.Models.Purchaser", "Purchaser")
                        .WithMany("Articles")
                        .HasForeignKey("PurchaserId")
                        .HasConstraintName("FK__Article__Purchas__37A5467C")
                        .IsRequired();

                    b.HasOne("HAVI_app.Models.Supplier", "Supplier")
                        .WithMany("Articles")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK__Article__Supplie__38996AB5")
                        .IsRequired();

                    b.Navigation("ArticleInformation");

                    b.Navigation("Country");

                    b.Navigation("InternalArticleInformation");

                    b.Navigation("Purchaser");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("HAVI_app.Models.Bundle", b =>
                {
                    b.HasOne("HAVI_app.Models.InternalArticleInformation", "InternalArticleInformation")
                        .WithMany("Bundles")
                        .HasForeignKey("InternalArticleInformationId")
                        .HasConstraintName("FK__Bundle__Internal__3D5E1FD2")
                        .IsRequired();

                    b.Navigation("InternalArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.Country", b =>
                {
                    b.HasOne("HAVI_app.Models.Profile", "Profile")
                        .WithMany("Countries")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Country__Profile__267ABA7A")
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("HAVI_app.Models.Iloscategory", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("Iloscategories")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__ILOSCateg__Count__440B1D61")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.Ilosorderpickgroup", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("Ilosorderpickgroups")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__ILOSOrder__Count__46E78A0C")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.InformCostType", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("InformCostTypes")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__InformCos__Count__4BAC3F29")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.OtherCostsForArticle", b =>
                {
                    b.HasOne("HAVI_app.Models.ArticleInformation", "ArticleInformation")
                        .WithMany("OtherCostsForArticles")
                        .HasForeignKey("ArticleInformationId")
                        .HasConstraintName("FK__OtherCost__Artic__5070F446")
                        .IsRequired();

                    b.Navigation("ArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.PrimaryDciloscode", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("PrimaryDciloscodes")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__PrimaryDC__Count__534D60F1")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.Purchaser", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("Purchasers")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__Purchaser__Count__29572725")
                        .IsRequired();

                    b.HasOne("HAVI_app.Models.Profile", "Profile")
                        .WithMany("Purchasers")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Purchaser__Profi__2A4B4B5E")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("HAVI_app.Models.Qip", b =>
                {
                    b.HasOne("HAVI_app.Models.InternalArticleInformation", "InternalArticleInformation")
                        .WithMany("Qips")
                        .HasForeignKey("InternalArticleInformationId")
                        .HasConstraintName("FK__QIP__InternalArt__5629CD9C")
                        .IsRequired();

                    b.Navigation("InternalArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.Sapplant", b =>
                {
                    b.HasOne("HAVI_app.Models.InternalArticleInformation", "InternalArticleInformation")
                        .WithMany("Sapplants")
                        .HasForeignKey("InternalArticleInformationId")
                        .HasConstraintName("FK__SAPPlant__Intern__5CD6CB2B")
                        .IsRequired();

                    b.Navigation("InternalArticleInformation");
                });

            modelBuilder.Entity("HAVI_app.Models.Supplier", b =>
                {
                    b.HasOne("HAVI_app.Models.Profile", "Profile")
                        .WithMany("Suppliers")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK__Supplier__Profil__2D27B809")
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("HAVI_app.Models.SupplierDeliveryUnit", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("SupplierDeliveryUnits")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__SupplierD__Count__619B8048")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.VailedForCustomer", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("VailedForCustomers")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__VailedFor__Count__6477ECF3")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.VatTaxCode", b =>
                {
                    b.HasOne("HAVI_app.Models.Country", "Country")
                        .WithMany("VatTaxCodes")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__VatTaxCod__Count__6754599E")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HAVI_app.Models.ArticleInformation", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("OtherCostsForArticles");
                });

            modelBuilder.Entity("HAVI_app.Models.Country", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Iloscategories");

                    b.Navigation("Ilosorderpickgroups");

                    b.Navigation("InformCostTypes");

                    b.Navigation("PrimaryDciloscodes");

                    b.Navigation("Purchasers");

                    b.Navigation("SupplierDeliveryUnits");

                    b.Navigation("VailedForCustomers");

                    b.Navigation("VatTaxCodes");
                });

            modelBuilder.Entity("HAVI_app.Models.InternalArticleInformation", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Bundles");

                    b.Navigation("Qips");

                    b.Navigation("Sapplants");
                });

            modelBuilder.Entity("HAVI_app.Models.Profile", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("Purchasers");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("HAVI_app.Models.Purchaser", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("HAVI_app.Models.Supplier", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}

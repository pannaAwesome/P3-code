@layout HAVI_app.Shared.Supplier_layout.Form_layout
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@page "/article_info_form/"
@using HAVI_app.Models
@using Newtonsoft.Json
@inherits HAVI_app.Classes.Validation
@inject HAVI_app.Services.Classes.SalesUnitService SalesUnitService
@inject HAVI_app.Services.Classes.ArticleData ArticleData



<HAVI_app.Shared.Supplier_layout.Form_header SupplierState="filled" ArticleState="active" Id="Article.Id" />


<div class="row justify-content-center">
    <div class="col-10">
        <h3>Article information:</h3>
        <p class="form-header-supplier">Fill out information regarding the article:</p>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-10 d-flex justify-content-center">
        <EditForm Model="ArticleData.Article" OnSubmit="@ValidationArticleInfoForm">
            <table class="table">

                <tr>
                    <td>
                        <label for="article_name" class="required">Article name:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @ArticleNameValidated" @onfocus="@(() => ArticleNameValidated = "")" name="article_name" @bind="ArticleData.Article" required maxlength="31">
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter the name of the article. This field must only contain letters.
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="salesunit" class="required">Salesunit:</label>
                    </td>
                    <td>
                        <select class="form-control @SalesUnit" @onclick="@(() => SalesUnit = "")" name="salesunit" @onchange="@((ChangeEventArgs __e) => ArticleData.Article = __e.Value.ToString())" value="@ArticleData.Article" required>
                            <option>-- select or search for an option --</option>
                            @foreach (var item in sales)
                            {
                                <option>@item.Unit</option>
                            }
                        </select>
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter the unit in which the article is delivered.
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="article_pr_salesunit" class="required">Articles per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @ArticlePerSalesunitValidated" @onfocus="@(() => ArticleData.Article = "")" name="article_pr_salesunit" @bind="ArticleData.Article" required maxlength="5">
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter how many articles are delivered per salesunit. This cannot be zero!
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>
                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="supplier_article_nn" class="required">Supplier article number/name:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @SupplierArticleNumberValidated" @onfocus="@(() => SupplierArticleNumberValidated = "")" name="supplier_article_nn" @bind="Article.SupplierArticleName" required maxlength="16">
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter your own reference number or name for the article
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="GTIN" class="required">GTIN number:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @GTIN" @onfocus="@(() => GTIN = "")" name="GTIN" @bind="Article.Gtinnumber" required minlength="14" maxlength="14">
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter 14 digits, if you have less than 14 digits then place 0's infront
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="Shelflife" class="required">Shelflife:</label>
                    </td>
                    <td>
                        <input type="number" class="form-control @ShelflifeValidated" @onfocus="@(() => ShelflifeValidated = "")" name="Shelflife" @bind="Article.Shelflife" required maxlength="3">
                    </td>
                    <td>
                        <label class="center-for-units" for="Shelflife">days</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter expiration time for the article in days. This cannot be zero!
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="Min_shelflife" class="required">Min. shelflife at HAVI:</label>
                    </td>
                    <td>
                        <input type="number" class="form-control @ShelflifeAtHaviValidated" @onfocus="@(() => ShelflifeAtHaviValidated = "")" name="Min_shelflife" @bind="Article.MinimumShelflife" required maxlength="4">
                    </td>
                    <td>
                        <label class="center-for-units" for="Min_shelflife">days</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter the least amount of days that HAVI should have the article. This cannot be zero!
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="Organic_article" class="required">Organic article?</label>
                    </td>

                    <td>
                        <div class="text-center">
                            <input type="radio" name="Organic_article" value="yes" class="@Organic" @onclick="@(() => Organic = "")" checked="@(Article.OrganicArticle == 1)" @onchange="@(() => Article.OrganicArticle = 1)" required />
                            <label for="yes">Yes</label>
                            &nbsp;
                            <input type="radio" value="no" name="Organic_article" class="@Organic" @onclick="@(() => Organic = "")" checked="@(Article.OrganicArticle == 0)" @onchange="@(() => Article.OrganicArticle = 0)" required />
                            <label for="no">No</label>
                        </div>
                    </td>
                    <td>
                        <div></div>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            Enter whether the article is organic or not
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>


            </table>
            <div class="row justify-content-center">
                <div class="text-right col-6">
                    <input type="button" class="btn cancel-button button-size" value="Back" @onclick="OnPostBack" />
                </div>
                <div class="text-left col-6">
                    <input type="submit" class="btn green-button button-size" value="Next" />
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code{
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string article { get; set; }

    List<SalesUnit> sales = new List<SalesUnit>();

    ArticleInformation Article = new ArticleInformation();

    public string ArticleNameValidated = "";
    public string ArticlePerSalesunitValidated = "";
    public string SupplierArticleNumberValidated = "";
    public string ShelflifeValidated = "";
    public string ShelflifeAtHaviValidated = "";
    public string SalesUnit = "";
    public string GTIN = "";
    public string Organic = "";

    public void ValidationArticleInfoForm()
    {
        if (Article.ArticleName == "")
        {
            ArticleNameValidated = "btn-danger";
        }

        if (Article.Salesunit == "-- select or search for an option --")
        {
            SalesUnit = "btn-danger";
        }

        if (!MustNotBeZeroOrNegativeNumbere(Article.ArticlesPerSalesunit))
        {
            ArticlePerSalesunitValidated = "btn-danger";
        }

        if (!MustNotBeZeroOrNegativeNumbere(Article.Shelflife))
        {
            ShelflifeValidated = "btn-danger";
        }

        if (!MustNotBeZeroOrNegativeNumbere(Article.MinimumShelflife))
        {
            ShelflifeAtHaviValidated = "btn-danger";
        }

        if (!GTINValidation(Article.Gtinnumber))
        {
            GTIN = "btn-danger";
        }

        if (Article.OrganicArticle == 2)
        {
            Organic = "btn-danger";
        }

        if (ArticleNameValidated == "" && ArticlePerSalesunitValidated == "" && SupplierArticleNumberValidated == "" && ShelflifeValidated == "" && ShelflifeAtHaviValidated == "" && SalesUnit == "" && GTIN == "" && Organic == "")
        {
            article = JsonConvert.SerializeObject(Article);
            NavigationManager.NavigateTo("/measurement_info_form/", true);
        }
    }

    public void OnPostBack()
    {
        NavigationManager.NavigateTo($"/supplier_info_form/{Article.Id}", true);
    }

    protected override async Task OnInitializedAsync()
    {
        sales = await SalesUnitService.GetSalesUnits();
        Article = JsonConvert.DeserializeObject<ArticleInformation>(article);
    }
}


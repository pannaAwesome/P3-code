@layout HAVI_app.Shared.Supplier_layout.Form_layout
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@page "/measurement_info_form"
@inherits HAVI_app.Classes.Validation
@inject Models.ArticleInformation Article

<HAVI_app.Shared.Supplier_layout.Form_header SupplierState="filled" ArticleState="filled" MeasurementState="active" />

<div class="row justify-content-center">
    <div class="col-10">
        <h3>Measurement information:</h3>
        <p class="form-header-supplier">Fill out information regarding your package measurements</p>
    </div>
</div>

<div class="justify-content-center row">
    <div class="col-12 d-flex justify-content-center">
        <form>
            <table class="table">

                <tr>
                    <td>
                        <label for="length" class="required">Length per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @LengthValidated" name="Length" @bind="Article.LengthPrSalesunit" @onfocus="RemoveLengthDanger" required max="8">
                    </td>
                    <td>
                        <label class="center-for-units" for="length">cm</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            The numerical length of your salesunit
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="width" class="required">Width per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @WidthValidated" name="width" @bind="Article.WidthPrSalesunit" @onfocus="RemoveWidthDanger" required max="8">
                    </td>
                    <td>
                        <label class="center-for-units" for="width">cm</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            The numerical width of your salesunit
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="height" class="required">Height per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @HeightValidated" name="height" @bind="Article.HeightPrSalesunit" @onfocus="RemoveHeightDanger" required max="8">
                    </td>
                    <td>
                        <label class="center-for-units" for="height">cm</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            The numerical height of your salesunit
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="net_weight" class="required">Net weight per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @NetWeightValidated" name="net_weight" @bind="Article.NetWeightPrSalesunit" @onfocus="RemoveNetWeightDanger" required max="8">
                    </td>
                    <td>
                        <label class="center-for-units" for="net_weight">kg</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            The weight of the content in a salesunit
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

                <tr>
                    <td>
                        <label for="gross_weight" class="required">Gross weight per salesunit:</label>
                    </td>
                    <td>
                        <input type="text" class="form-control @GrossWeightValidated" name="gross_weight" @bind="Article.GrossWeightPrSalesunit" @onfocus="RemoveGrossWeightDanger" required max="8">
                    </td>
                    <td>
                        <label class="center-for-units" for="gross_weight">kg</label>
                    </td>
                    <td>
                        <HAVI_app.Shared.Shared_layout.Questionmark_top>
                            The total weight of the salesunit
                        </HAVI_app.Shared.Shared_layout.Questionmark_top>

                    </td>
                </tr>

            </table>
            <div class="row justify-content-center">
                <div class="text-right col-6">
                    <input type="submit" class="btn cancel-button button-size" value="Back" @onclick="OnPostBack" />
                </div>
                <div class="text-left col-6">
                    <input type="button" class="btn green-button button-size" value="Next" @onclick="ValidationMeasurementForm" />
                </div>
            </div>
        </form>
    </div>
</div>

@code {
    [Parameter]
    public string LengthPrSalesunit { get; set; }

    public string WidthPrSalesunit { get; set; }

    public string HeightPrSalesunit { get; set; }

    public string NetWeightPrSalesunit { get; set; }

    public string GrossWeightPrSalesunit { get; set; }

    public string LengthValidated;

    public string WidthValidated;

    public string HeightValidated;

    public string NetWeightValidated;

    public string GrossWeightValidated;

    public void ValidationMeasurementForm() 
    {
        
        NavigationManager.NavigateTo($"/shipment_info_form", true);
        
        /*
        if (Article.LengthPrSalesunit.GetType() == typeof(double))
        {
        }
        if (Article.LengthPrSalesunit.GetType() = typeof(double))
        {
            LengthValidated = "btn-danger";
        }
        if (!DecimalOnly(WidthPrSalesunit))
        {
            WidthValidated = "btn-danger";
        }
        if (!DecimalOnly(WidthPrSalesunit))
        {
            HeightValidated = "btn-danger";
        }
        if (!DecimalOnly(WidthPrSalesunit))
        {
            NetWeightValidated = "btn-danger";
        }
        if (!DecimalOnly(WidthPrSalesunit))
        {
            GrossWeightValidated = "btn-danger";
        }
        */
    }

    public void RemoveLengthDanger()
    {
        LengthValidated = "";
    }

    public void RemoveWidthDanger()
    {
        WidthValidated = "";
    }
    public void RemoveHeightDanger()
    {
        HeightValidated = "";
    }
    public void RemoveNetWeightDanger()
    {
        NetWeightValidated = "";
    }
    public void RemoveGrossWeightDanger()
    {
        GrossWeightValidated = "";
    }
}

@code{
    public void OnPostForward()
    {
        //NavigationManager.NavigateTo($"/shipment_info_form", true);
    }

    public void OnPostBack()
    {
        NavigationManager.NavigateTo($"/article_info_form", true);
    }
}

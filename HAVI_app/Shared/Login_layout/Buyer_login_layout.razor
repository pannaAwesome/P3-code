@inject NavigationManager NavigationManager
@inject HAVI_app.Services.Classes.ProfileService ProfileService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HAVI_app.Services.Classes.PurchaserService PurchaserService 

<div class="col-12 user-login">
    <div class="row justify-content-center">
        <div class="col-12 user-login-header">
            <h5>Sign in as purchaser:</h5>
        </div>
    </div>
    <form>
        <div class="row justify-content-center">
            <div class="col-7">
                <table class="table table-borderless">
                    <tr class="form-group">
                        <td>
                            <label>Email:</label>
                        </td>
                        <td>
                            <input class="form-control" type="email" name="buyer_username" @bind="Username" />
                        </td>
                    </tr>
                    <tr class="form-group">
                        <td>
                            <label>Password:</label>
                        </td>
                        <td>
                            <input class="form-control" type="password" name="buyer_password" @bind="Password" />
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-5"></div>
            <div class="col-2 justify-content-center">
                <input class="btn green-button" type="button" name="Submit" value="Sign in" @onclick="LogUsername" />
            </div>
        </div>
    </form>
</div>

@code {

    [Parameter]
    public string Username { get; set; }

    [Parameter]
    public string Password { get; set; }


    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string _authMessage;

    private async Task LogUsername()
    {
        var user = await ProfileService.GetProfileByUsernameAndpassword(Username, Password);

        if (user != null && user.Usertype == 1 && user.Password == Password)
        {
            Purchaser purchaser = await PurchaserService.GetPurchaserForProfile(user.Id);
            NavigationManager.NavigateTo($"/overview_purchaser/{purchaser.Id}", true);
        }
        else
        {
            _authMessage = "The username or password is incorrect, please try again!";
        }
    }
}
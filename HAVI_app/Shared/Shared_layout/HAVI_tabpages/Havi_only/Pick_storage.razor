@inject HAVI_app.Services.Classes.PrimaryDCILOSCodeService PrimaryDCILOSCodeService
@inject HAVI_app.Services.Classes.InternalArticleInformationService InternalArticleInformationService

<div class="col-11">
    <h4>Pick storage:</h4>
</div>
<div class="col-1 @EditPossible">
    @if (EditingFields)
    {
        <div class="save-button" @onclick="Saving"></div>
    }
    else
    {
        <div class="edit-button" @onclick="Editing"></div>
    }

</div>
<div class="justify-content-center row">
    <div class="col-12">
        <form>
            <table class="table">
                <tr>
                    <td>
                        <label for="primary_dc" class="required">Primary DC ILOS Code:</label>
                    </td>
                    <td>
                        <select class="form-control" name="primary_dc" @onchange="@((ChangeEventArgs __e) => Article.InternalArticleInformation.PrimaryDcIloscode = Int32.Parse(__e.Value.ToString()))" disabled="@IsDisabled">
                            <option disabled selected>-- select an option --</option>
                            @foreach (PrimaryDciloscode item in Codes)
                            {
                                <option>@item.PrimaryCode</option>
                            }
                        </select>
                    </td>
                </tr>


                @foreach (PrimaryDciloscode item in Codes)
                {
            <tr>
                <td>
                    <label for="sap_plant1" class="required">SAP Plant: @item.Sapplant</label>
                </td>
                <td>
                    <input type="radio" name="sap_plant1" id="yes" value="@item.Sapplant" @onchange="@((ChangeEventArgs __e) => UpdateSapplant(__e.Value.ToString()))" disabled="@IsDisabled">
                    <label for="yes">Yes</label>
                    &nbsp;
                    <input type="radio" id="no" name="sap_plant1">
                    <label for="no">No</label>
                </td>
            </tr>
                        }
                    
                </table>
        </form>
    </div>
</div>

@code {
    [Parameter]
    public Article Article { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; }

    [Parameter]
    public string EditPossible { get; set; }

    public List<Sapplant> SapPlants = new List<Sapplant>();

    public List<PrimaryDciloscode> Codes = new List<PrimaryDciloscode>();

    protected override async Task OnInitializedAsync()
    {
        Codes = await PrimaryDCILOSCodeService.GetPrimaryDCILOSCodes(Article.CountryId);

        if (!IsDisabled)
        {
            Article.InternalArticleInformation.Sapplants = new List<Sapplant>();
            foreach (PrimaryDciloscode item in Codes)
            {
                Article.InternalArticleInformation.Sapplants.Add(new Sapplant() { SapplantName = item.Sapplant });
            }
        }
        else
        {
            InternalArticleInformation internalInfo = await InternalArticleInformationService.GetInternalArticleInformation(Article.InternalArticleInformationId);
            SapPlants = internalInfo.Sapplants;
            Article.InternalArticleInformation.Sapplants = SapPlants;
        }
    }

    public void UpdateSapplant(string value)
    {
        int i = 0;
        foreach (Sapplant plant in Article.InternalArticleInformation.Sapplants)
        {
            if (plant.SapplantName == value)
            {
                Article.InternalArticleInformation.Sapplants[i].SapplantValue = plant.SapplantValue == 1 ? 0 : 1;
            }
            i++;
        }
    }

    public bool EditingFields = false;

    public void Editing()
    {
        EditingFields = true;
        IsDisabled = false;
    }

    public async void Saving()
    {
        await InternalArticleInformationService.UpdateInternalArticleInformation(Article.InternalArticleInformationId, Article.InternalArticleInformation);
        EditingFields = false;
        IsDisabled = true;
    }
}